import { s, e } from './index-ee0e95b8.js';

const t={JOIN_ROOM:"join-room",PING_ROOM:"ping-room",LEAVE_ROOM:"leave-room"};class i{constructor(s,e){this.userData=s,this.socketUrl=e,this.users={},this.userStreams={},this.callbacks={},this.envIsBrowser="undefined"!=typeof window;}stopCamera(s=!0){this.stream&&(this.stream.getVideoTracks()[0].enabled=!1,s&&this.pub(i.actions.USER_VIDEO_STOPPED,{}));}startCamera(s=!0){this.stream&&(this.stream.getVideoTracks()[0].enabled=!0,s&&this.pub(i.actions.USER_VIDEO_STARTED,{}));}muteAudio(s=!0){this.stream&&(this.stream.getAudioTracks()[0].enabled=!1,s&&this.pub(i.actions.USER_VIDEO_STOPPED,{}));}unmuteAudio(s=!0){this.stream&&(this.stream.getAudioTracks()[0].enabled=!0,s&&this.pub(i.actions.USER_AUDIO_STARTED,{}));}getVideoStream(s){return this.userStreams[s]}setVideoStream(s,e){if(this.userStreams[e])return;const t=document.createElement("video");t.srcObject=s,this.userStreams[e]=t,t.onloadedmetadata=()=>{t.play();},document.body.appendChild(t);}static concatFullRoomId(s,e,t){return s+(e||"_ALL_FILES_")+(t||"_ALL_ROOMS_")}isJoiningTheSameRoom(s,e,t){return this.fullRoomId===i.concatFullRoomId(s,e,t)}joinRoom(o,r,a){this.projectId=o,this.fileId=r,this.roomId=a,this.fullRoomId=i.concatFullRoomId(this.projectId,this.fileId,this.roomId),this.leaveRoom(),this.socket=s(this.socketUrl,{"sync disconnect on unload":!0,query:`userId=${this.userData.id}&roomId=${this.fullRoomId}`}),e(s.Manager)(this.socket),this.socket.on("*",s=>{const[e,i]=s.data;e in t||this._emit(e,i.payload,i.userId);}),this.envIsBrowser&&window.addEventListener("beforeunload",()=>{this.leaveRoom();}),this.pub(t.JOIN_ROOM),this.socket.on(t.JOIN_ROOM,s=>{console.info(`${t.JOIN_ROOM}:`,s);const e=s.userData;this._addUserIfNew(e),this.pub(t.PING_ROOM);}),this.socket.on(t.LEAVE_ROOM,s=>{console.info(`${t.LEAVE_ROOM}:`,s);const e=s.userData,o=e.id;if(o in this.users)return delete this.users[o],void this._emit(i.actions.USER_LEFT,e);console.warn("Outgoing user was not found in room.");}),this.socket.on(t.PING_ROOM,s=>{console.info(`${t.PING_ROOM}:`,s);const e=s.userData;this._addUserIfNew(e);});}_prepareMediaStream(){return this.__streamPromise||(this.__streamPromise=new window.Promise((s,e)=>{this.stream?s():navigator.mediaDevices.getUserMedia({audio:!0,video:{width:400,height:300}}).then(e=>{this.stream=e,this.stopCamera(!1),this.muteAudio(!1),s();}).catch(s=>{e(s);});})),this.__streamPromise}leaveRoom(){this._emit(i.actions.LEFT_ROOM),this.users={},this.socket&&this.pub(t.LEAVE_ROOM,void 0,()=>{this.socket.close();});}_addUserIfNew(s){s.id in this.users||(this.users[s.id]=s,this._emit(i.actions.USER_JOINED,s));}createRoom(){return this.roomId=shortid.generate(),this.joinRoom(this.projectId,this.fileId,this.roomId),this.envIsBrowser&&window.history.pushState(null,null,`?project-id=${this.projectId}&file-id=${this.fileId}&room-id=${this.roomId}`),this.roomId}getUsers(){return this.users}getUser(s){return this.users[s]}pub(s,e,t){if(!s)throw new Error("Missing messageType");this.socket.emit(s,{userData:this.userData,userId:this.userData.id,payload:e},t);}_emit(s,e,t){const i=this.callbacks[s];i&&i.forEach(s=>s(e,t));}sub(s,e){if(!s)throw new Error("Missing messageType");if(!e)throw new Error("Missing callback");this.callbacks[s]=this.callbacks[s]||[],this.callbacks[s].push(e);return ()=>{this.callbacks[s].splice(this.callbacks[s].indexOf(e),1);}}}i.actions={USER_JOINED:"user-joined",USER_VIDEO_STARTED:"user-video-started",USER_VIDEO_STOPPED:"user-video-stopped",USER_AUDIO_STARTED:"user-audio-started",USER_AUDIO_STOPPED:"user-audio-stopped",USER_LEFT:"user-left",LEFT_ROOM:"left-room",TEXT_MESSAGE:"text-message",POSE_CHANGED:"pose-message",COMMAND_ADDED:"command-added",COMMAND_UPDATED:"command-updated",FILE_WITH_PROGRESS:"file-with-progress"};class o{static setSocketURL(s){this.socketUrl=s;}static getInstance(s,e,t,o){if(!this.session){if(!this.socketUrl)throw new Error("Missing #socketUrl. Call #setSocketURL first.");this.session=new i(s,this.socketUrl);}return this.session.isJoiningTheSameRoom(e,t,o)||this.session.joinRoom(e,t,o),this.session}static getCurrentSession(){return this.session}}

export { i, o };
